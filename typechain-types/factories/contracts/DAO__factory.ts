/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { DAO, DAOInterface } from "../../contracts/DAO";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "attachedBy",
        type: "address",
      },
    ],
    name: "VaultAttached",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "detachedBy",
        type: "address",
      },
    ],
    name: "VaultDetached",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PROPOSAL_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_PROPOSAL_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VOTING_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
    ],
    name: "attachVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "attachedVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "detachVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMembers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "memberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "memberList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "yesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "propose",
    outputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "quorumPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_quorumPercentage",
        type: "uint256",
      },
    ],
    name: "setQuorumPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260336009553480156200001657600080fd5b50604051620022003803806200220083398101604081905262000039916200020e565b62000044336200018b565b6000805460ff60a01b19169055600180558151620000a95760405162461bcd60e51b815260206004820152601860248201527f44414f206e616d652063616e6e6f7420626520656d707479000000000000000060448201526064015b60405180910390fd5b6001600160a01b038116620001015760405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206f776e6572206164647265737300000000000000000000006044820152606401620000a0565b60026200010f838262000385565b506200011b816200018b565b6001600160a01b03166000818152600360205260408120805460ff1916600190811790915560058054808301825592527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b0319169092179091556007555062000451565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200020957600080fd5b919050565b600080604083850312156200022257600080fd5b82516001600160401b03808211156200023a57600080fd5b818501915085601f8301126200024f57600080fd5b815181811115620002645762000264620001db565b604051601f8201601f19908116603f011681019083821181831017156200028f576200028f620001db565b81604052828152602093508884848701011115620002ac57600080fd5b600091505b82821015620002d05784820184015181830185015290830190620002b1565b6000848483010152809650505050620002eb818601620001f1565b925050509250929050565b600181811c908216806200030b57607f821691505b6020821081036200032c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038057600081815260208120601f850160051c810160208610156200035b5750805b601f850160051c820191505b818110156200037c5782815560010162000367565b5050505b505050565b81516001600160401b03811115620003a157620003a1620001db565b620003b981620003b28454620002f6565b8462000332565b602080601f831160018114620003f15760008415620003d85750858301515b600019600386901b1c1916600185901b1785556200037c565b600085815260208120601f198616915b82811015620004225788860151825594840194600190910190840162000401565b5085821015620004415787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611d9f80620004616000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063b307fc6d11610097578063c9d27afe11610071578063c9d27afe1461039b578063ca6d56dc146103ae578063da35c664146103c1578063f2fde38b146103ca57600080fd5b8063b307fc6d1461036b578063bd9682161461037e578063c7f758a81461038857600080fd5b8063944ee22d116100d3578063944ee22d146103305780639eab525314610339578063ab43015a1461034e578063b1610d7e1461036157600080fd5b8063715018a61461030f5780638456cb59146103175780638da5cb5b1461031f57600080fd5b806332f6a1dc11610166578063438596321161014057806343859632146102b65780634fa76ec9146102c9578063538e3f78146102d25780635c975abb146102fd57600080fd5b806332f6a1dc146102935780633ca4391d146102a65780633f4ba83a146102ae57600080fd5b80630b1ca49a116101a25780630b1ca49a146102415780630d61b5191461025657806311aee380146102695780632b47068c1461028057600080fd5b8063013cf08b146101c957806306fdde03146101f957806308ae4b0c1461020e575b600080fd5b6101dc6101d7366004611808565b6103dd565b6040516101f0989796959493929190611867565b60405180910390f35b61020161053c565b6040516101f091906118cc565b61023161021c3660046118fb565b60036020526000908152604090205460ff1681565b60405190151581526020016101f0565b61025461024f3660046118fb565b6105ca565b005b610254610264366004611808565b61084e565b61027260075481565b6040519081526020016101f0565b61025461028e3660046118fb565b610a5c565b6102546102a1366004611808565b610b67565b610254610bd1565b610254610c8c565b6102316102c4366004611916565b610c9c565b61027260095481565b6008546102e5906001600160a01b031681565b6040516001600160a01b0390911681526020016101f0565b600054600160a01b900460ff16610231565b610254610cfe565b610254610d10565b6000546001600160a01b03166102e5565b610272610e1081565b610341610d20565b6040516101f09190611942565b61027261035c366004611a32565b610d82565b61027262093a8081565b6102e5610379366004611808565b610f8b565b61027262278d0081565b6101dc610396366004611808565b610fb5565b6102546103a9366004611a9f565b611176565b6102546103bc3660046118fb565b611397565b61027260065481565b6102546103d83660046118fb565b61155a565b600460205260009081526040902080546001820180549192916103ff90611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461042b90611ad4565b80156104785780601f1061044d57610100808354040283529160200191610478565b820191906000526020600020905b81548152906001019060200180831161045b57829003601f168201915b50505050509080600201805461048d90611ad4565b80601f01602080910402602001604051908101604052809291908181526020018280546104b990611ad4565b80156105065780601f106104db57610100808354040283529160200191610506565b820191906000526020600020905b8154815290600101906020018083116104e957829003601f168201915b505050506003830154600484015460058501546006909501549394919390925060ff81169061010090046001600160a01b031688565b6002805461054990611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461057590611ad4565b80156105c25780601f10610597576101008083540402835291602001916105c2565b820191906000526020600020905b8154815290600101906020018083116105a557829003601f168201915b505050505081565b6105d26115d0565b6105da61162a565b6105e2611677565b6001600160a01b0381166106365760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d656d626572206164647265737360501b60448201526064015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff1661066e5760405162461bcd60e51b815260040161062d90611b0e565b6000546001600160a01b03166001600160a01b0316816001600160a01b0316036106d05760405162461bcd60e51b815260206004820152601360248201527221b0b73737ba103932b6b7bb329037bbb732b960691b604482015260640161062d565b6001600160a01b0381166000908152600360205260408120805460ff191690555b6005548110156107f657816001600160a01b03166005828154811061071857610718611b34565b6000918252602090912001546001600160a01b0316036107e4576005805461074290600190611b60565b8154811061075257610752611b34565b600091825260209091200154600580546001600160a01b03909216918390811061077e5761077e611b34565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060058054806107bd576107bd611b79565b600082815260209020810160001990810180546001600160a01b03191690550190556107f6565b806107ee81611b8f565b9150506106f1565b506007805490600061080783611ba8565b909155505060405133906001600160a01b038316907faa91016c21c52c58ac64f23f71bbe75becc9ada603e18ee671d09ff15492d1c190600090a361084b60018055565b50565b61085661162a565b61085e611677565b8060008111801561087157506006548111155b61088d5760405162461bcd60e51b815260040161062d90611bbf565b600082815260046020526040902060058101544210156108ef5760405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f64206e6f7420656e646564000000000000000000604482015260640161062d565b600681015460ff16156109405760405162461bcd60e51b8152602060048201526019602482015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b604482015260640161062d565b6000816004015482600301546109569190611bec565b90506000606460095460075461096c9190611bff565b6109769190611c16565b9050808210156109bd5760405162461bcd60e51b8152602060048201526012602482015271145d5bdc9d5b481b9bdd081c995858da195960721b604482015260640161062d565b8260040154836003015411610a085760405162461bcd60e51b8152602060048201526011602482015270141c9bdc1bdcd85b081c995a9958dd1959607a1b604482015260640161062d565b60068301805460ff1916600190811790915560405190815285907f948f4a9cd986f1118c3fbd459f7a22b23c0693e1ca3ef06a6a8be5aa7d39cc039060200160405180910390a25050505061084b60018055565b610a646115d0565b610a6c61162a565b610a74611677565b6001600160a01b038116610ac25760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964207661756c74206164647265737360581b604482015260640161062d565b6008546001600160a01b031615610b145760405162461bcd60e51b815260206004820152601660248201527515985d5b1d08185b1c9958591e48185d1d1858da195960521b604482015260640161062d565b600880546001600160a01b0319166001600160a01b0383169081179091556040513391907f402dc0e0b3cc5e6e72bd9d0ffaf398abfe958172835feb52d2c4ebdb6e58ea6690600090a361084b60018055565b610b6f6115d0565b600081118015610b80575060648111155b610bcc5760405162461bcd60e51b815260206004820152601960248201527f496e76616c69642071756f72756d2070657263656e7461676500000000000000604482015260640161062d565b600955565b610bd96115d0565b610be161162a565b610be9611677565b6008546001600160a01b0316610c355760405162461bcd60e51b8152602060048201526011602482015270139bc81d985d5b1d08185d1d1858da1959607a1b604482015260640161062d565b600880546001600160a01b031981169091556040516001600160a01b0390911690339082907f99f736dac5b359a472c9b2edd93e35b98547bf61d1ee8395824e748c7731cc7890600090a350610c8a60018055565b565b610c946115d0565b610c8a6116d0565b600082600081118015610cb157506006548111155b610ccd5760405162461bcd60e51b815260040161062d90611bbf565b505060009182526004602090815260408084206001600160a01b039390931684526007909201905290205460ff1690565b610d066115d0565b610c8a6000611725565b610d186115d0565b610c8a611775565b60606005805480602002602001604051908101604052809291908181526020018280548015610d7857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d5a575b5050505050905090565b3360009081526003602052604081205460ff1680610daa57506000546001600160a01b031633145b610dc65760405162461bcd60e51b815260040161062d90611b0e565b610dce61162a565b610dd6611677565b6000845111610e1f5760405162461bcd60e51b81526020600482015260156024820152745469746c652063616e6e6f7420626520656d70747960581b604482015260640161062d565b6000835111610e705760405162461bcd60e51b815260206004820152601b60248201527f4465736372697074696f6e2063616e6e6f7420626520656d7074790000000000604482015260640161062d565b610e108210158015610e85575062278d008211155b610ec45760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b210323ab930ba34b7b760811b604482015260640161062d565b60068054906000610ed483611b8f565b9091555050600654600081815260046020526040902081815590915060018101610efe8682611c87565b5060028101610f0d8582611c87565b50610f188342611bec565b60058201819055600682018054610100600160a81b03191633610100810291909117909155604051909184917f98120a6aaa04295520ab4e01c6c1235dd316e822cc9ff31db7b3f197366d18bd91610f72918a9190611d47565b60405180910390a350610f8460018055565b9392505050565b60058181548110610f9b57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000606080600080600080600088600081118015610fd557506006548111155b610ff15760405162461bcd60e51b815260040161062d90611bbf565b60008a8152600460208190526040909120805460038201549282015460058301546006840154600185018054959694959094600288019490939092909160ff82169161010090046001600160a01b031690879061104d90611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461107990611ad4565b80156110c65780601f1061109b576101008083540402835291602001916110c6565b820191906000526020600020905b8154815290600101906020018083116110a957829003601f168201915b505050505096508580546110d990611ad4565b80601f016020809104026020016040519081016040528092919081815260200182805461110590611ad4565b80156111525780601f1061112757610100808354040283529160200191611152565b820191906000526020600020905b81548152906001019060200180831161113557829003601f168201915b50505050509550995099509950995099509950995099505050919395975091939597565b3360009081526003602052604090205460ff168061119e57506000546001600160a01b031633145b6111ba5760405162461bcd60e51b815260040161062d90611b0e565b6111c261162a565b6111ca611677565b816000811180156111dd57506006548111155b6111f95760405162461bcd60e51b815260040161062d90611bbf565b6000838152600460205260409020600581015442106112505760405162461bcd60e51b8152602060048201526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b604482015260640161062d565b33600090815260078201602052604090205460ff16156112a25760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b604482015260640161062d565b600681015460ff16156112f35760405162461bcd60e51b8152602060048201526019602482015278141c9bdc1bdcd85b08185b1c9958591e48195e1958dd5d1959603a1b604482015260640161062d565b3360009081526007820160205260409020805460ff1916600117905582156113315760038101805490600061132783611b8f565b9190505550611349565b60048101805490600061134383611b8f565b91905055505b60408051841515815260016020820152339186917fcbdf6214089cba887ecbf35a0b6a734589959c9763342c756bb2a80ca2bc9f6e910160405180910390a3505061139360018055565b5050565b61139f6115d0565b6113a761162a565b6113af611677565b6001600160a01b0381166113fe5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d656d626572206164647265737360501b604482015260640161062d565b6001600160a01b03811660009081526003602052604090205460ff161561145a5760405162461bcd60e51b815260206004820152601060248201526f20b63932b0b23c90309036b2b6b132b960811b604482015260640161062d565b6103e8600754106114a35760405162461bcd60e51b815260206004820152601360248201527213585e081b595b58995c9cc81c995858da1959606a1b604482015260640161062d565b6001600160a01b0381166000818152600360205260408120805460ff1916600190811790915560058054918201815582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b031916909217909155600780549161151683611b8f565b909155505060405133906001600160a01b038316907f6a2af11b2d73f347f9d5840aea46899e17609730b5cd91bd9c312098038acba690600090a361084b60018055565b6115626115d0565b6001600160a01b0381166115c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161062d565b61084b81611725565b6000546001600160a01b03163314610c8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161062d565b600054600160a01b900460ff1615610c8a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161062d565b6002600154036116c95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161062d565b6002600155565b6116d86117b8565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61177d61162a565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117083390565b600054600160a01b900460ff16610c8a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161062d565b60006020828403121561181a57600080fd5b5035919050565b6000815180845260005b818110156118475760208185018101518683018201520161182b565b506000602082860101526020601f19601f83011685010191505092915050565b60006101008a83528060208401526118818184018b611821565b90508281036040840152611895818a611821565b60608401989098525050608081019490945260a0840192909252151560c08301526001600160a01b031660e0909101529392505050565b602081526000610f846020830184611821565b80356001600160a01b03811681146118f657600080fd5b919050565b60006020828403121561190d57600080fd5b610f84826118df565b6000806040838503121561192957600080fd5b82359150611939602084016118df565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156119835783516001600160a01b03168352928401929184019160010161195e565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119b657600080fd5b813567ffffffffffffffff808211156119d1576119d161198f565b604051601f8301601f19908116603f011681019082821181831017156119f9576119f961198f565b81604052838152866020858801011115611a1257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a4757600080fd5b833567ffffffffffffffff80821115611a5f57600080fd5b611a6b878388016119a5565b94506020860135915080821115611a8157600080fd5b50611a8e868287016119a5565b925050604084013590509250925092565b60008060408385031215611ab257600080fd5b8235915060208301358015158114611ac957600080fd5b809150509250929050565b600181811c90821680611ae857607f821691505b602082108103611b0857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600c908201526b2737ba10309036b2b6b132b960a11b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115611b7357611b73611b4a565b92915050565b634e487b7160e01b600052603160045260246000fd5b600060018201611ba157611ba1611b4a565b5060010190565b600081611bb757611bb7611b4a565b506000190190565b602080825260139082015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b604082015260600190565b80820180821115611b7357611b73611b4a565b8082028115828204841417611b7357611b73611b4a565b600082611c3357634e487b7160e01b600052601260045260246000fd5b500490565b601f821115611c8257600081815260208120601f850160051c81016020861015611c5f5750805b601f850160051c820191505b81811015611c7e57828155600101611c6b565b5050505b505050565b815167ffffffffffffffff811115611ca157611ca161198f565b611cb581611caf8454611ad4565b84611c38565b602080601f831160018114611cea5760008415611cd25750858301515b600019600386901b1c1916600185901b178555611c7e565b600085815260208120601f198616915b82811015611d1957888601518255948401946001909101908401611cfa565b5085821015611d375787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611d5a6040830185611821565b9050826020830152939250505056fea2646970667358221220e4f8e442bde6bc97c4d800c6ba9c3d86a609a66152d10a26e4cbfee7d372c50464736f6c63430008130033";

type DAOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAO__factory extends ContractFactory {
  constructor(...args: DAOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _owner, overrides || {});
  }
  override deploy(
    _name: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _owner, overrides || {}) as Promise<
      DAO & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DAO__factory {
    return super.connect(runner) as DAO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOInterface {
    return new Interface(_abi) as DAOInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): DAO {
    return new Contract(address, _abi, runner) as unknown as DAO;
  }
}
